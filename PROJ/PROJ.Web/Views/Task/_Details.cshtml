@using PROJ.Logic.DTOs
@using PROJ.Shared.Enums
@using PROJ.Logic.Interfaces

@inject IAppContext AppContext

@model TaskDTO

<form id="task-details-form" asp-controller="Task" asp-action="Edit">
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.Priority)
    @Html.HiddenFor(x => x.TaskGroup.Id)
    @Html.HiddenFor(x => x.TaskGroup.Project.Id)
    @Html.HiddenFor(x => x.CreationDate)
    @Html.HiddenFor(x => x.ModificationDate)
    @for (int i = 0; i < Model.Checklists.Count; i++)
    {
        @Html.HiddenFor(x => x.Checklists[i].Id)
    }
    @for (int i = 0; i < Model.Comments.Count; i++)
    {
        @Html.HiddenFor(x => x.Comments[i].Id)
    }
    @for (int i = 0; i < Model.AssignedUsers.Count; i++)
    {
        @Html.HiddenFor(x => x.AssignedUsers[i].Id)
    }
    <div class="task-details" data-id="@Model.Id">
        <div class="details-menu">
            <div class="info-group">
                <label asp-for="CreationDate"></label>
                <span>@Model.CreationDate.ToLocalTime()</span>
            </div>
            <div class="info-group">
                <label asp-for="ModificationDate"></label>
                <span>@Model.ModificationDate.ToLocalTime()</span>
            </div>
            <div class="info-group">
                <label asp-for="Priority"></label>
                @Html.HiddenFor(x => x.Priority)
                <div id="details-set-priority" class="info-input" data-binder-id="@Html.IdFor(x => x.Priority)">
                    @{ var priorityClass = "priority-" + Model.Priority.ToString().ToLower(); }
                    <span id="priority-selected" class="@priorityClass">@Model.Priority</span>
                    <div class="priority-options">
                        @foreach (var p in Enum.GetValues(typeof(Priority)).Cast<object>().OrderByDescending(x => (int)x))
                        {
                            var selected = Model.Priority == (Priority)p ? "selected" : "";
                            <div class="priority-option @selected" data-value="@((int)p)">
                                <div class="option-icon">
                                    @switch ((Priority)p)
                                    {
                                        case Priority.Low:
                                        {
                                            <span class="fas fa-angle-down priority-low" data-class="priority-low"></span>
                                            break;
                                        }
                                        case Priority.Normal:
                                        {
                                            <span class="fas fa-minus priority-normal" data-class="priority-normal"></span>
                                            break;
                                        }
                                        case Priority.High:
                                        {
                                            <span class="fas fa-angle-up priority-high" data-class="priority-high"></span>
                                            break;
                                        }
                                        case Priority.Critical:
                                        {
                                            <span class="fas fa-exclamation-circle priority-critical" data-class="priority-critical"></span>
                                            break;
                                        }
                                    }
                                </div>
                                <span class="option-name">@((Priority)p)</span>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="info-group">
                <label asp-for="IsCompleted"></label>
                <input asp-for="IsCompleted" class="form-checkbox" />
            </div>
            <div class="info-group">
                <label asp-for="EstimatedHours"></label>
                <input asp-for="EstimatedHours" class="info-input" placeholder="not set" />
            </div>
        </div>

        <div class="details-body">
            <div class="details-title">
                <div class="user-icons-container">
                    @foreach (var user in Model.AssignedUsers)
                    {
                        <div class="user-icon">
                            <img src="~/images/unknown_user.png" title="@user.UserName" style="border: 1px solid #CFD8DC" />
                        </div>
                    }
                </div>
                <div class="icons-container">
                    @if (AppContext.AssignedTasks.Any(x => x.Id == Model.Id))
                    {
                        <div id="task-leave" class="icon icon-static">
                            <span class="fas fa-user-minus" title="Leave Task"></span>
                        </div>
                    }
                    else
                    {
                        <div id="task-join" class="icon icon-static">
                            <span class="fas fa-user-plus" title="Join Task"></span>
                        </div>
                    }
                    <div id="task-delete" class="icon icon-static icon-large destructive">
                        <span class="fas fa-trash" title="Delete Task"></span>
                    </div>
                </div>
            </div>
            <input asp-for="Name" class="details-input" />
            <textarea asp-for="Description" class="details-input auto-expand" placeholder="Description" rows="2" data-min-rows="2" spellcheck="false"></textarea>

            <div class="section">
                <div class="section-header">
                    <span class="section-title">Comments</span>
                    <span id="section-toggle" class="fas fa-angle-up"></span>
                </div>
                <div class="section-container">
                    @foreach (var comment in Model.Comments)
                    {
                        <div class="comment">
                            <div class="comment-header">
                                <div class="user-icon">
                                    <img src="~/images/unknown_user.png" title="@comment.Author.UserName" style="border: 1px solid #CFD8DC" />
                                </div>
                                <span class="comment-author">@comment.Author.UserName</span>
                                <span class="comment-date">@comment.CreationDate.ToLocalTime()</span>
                            </div>
                            <div class="comment-text">@comment.Text</div>
                        </div>
                    }

                    <div class="comment comment-new">
                        <textarea spellcheck="false" class="comment-text auto-expand" placeholder="Write a comment..." rows="2" data-min-rows="2"></textarea>
                    </div>
                    <button type="button" id="comment-send" class="btn btn-teal" disabled>Send</button>
                </div>
            </div>
        </div>
    </div>
</form>
